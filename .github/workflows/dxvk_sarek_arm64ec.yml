name: build-dxvk-sarek-arm64ec

on:
  workflow_dispatch:

env:
  TOOLCHAIN_URL: "https://github.com/bylaws/llvm-mingw/releases/download/20250305/llvm-mingw-20250305-ucrt-ubuntu-20.04-x86_64.tar.xz"

jobs:
  build-arm64ec:
    # Only build releases that target 'main'; allow manual runs
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'release' && github.event.release.target_commitish == 'main') }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source (release tag if available)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'release' && github.event.release.tag_name || github.ref }}
          submodules: recursive
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            ninja-build meson python3 glslang-tools ca-certificates curl xz-utils pkgconf

      - name: Download ARM64EC llvm-mingw toolchain (bylaws)
        env:
          URL: ${{ env.TOOLCHAIN_URL }}
        run: |
          set -euxo pipefail
          mkdir -p "$HOME/toolchain"
          curl -L "$URL" -o /tmp/llvm-mingw.tar.xz
          tar -xJf /tmp/llvm-mingw.tar.xz -C "$HOME/toolchain" --strip-components=1
          echo "$HOME/toolchain/bin" >> "$GITHUB_PATH"
          arm64ec-w64-mingw32-gcc --version || true

      - name: Generate Meson cross file for ARM64EC
        run: |
          cat > arm64ec.meson <<'EOF'
          [binaries]
          ar = 'arm64ec-w64-mingw32-ar'
          c = 'arm64ec-w64-mingw32-gcc'
          cpp = 'arm64ec-w64-mingw32-g++'
          ld = 'arm64ec-w64-mingw32-ld'
          windres = 'arm64ec-w64-mingw32-windres'
          widl = 'arm64ec-w64-mingw32-widl'
          strip = 'llvm-strip'
          pkg-config = 'aarch64-linux-gnu-pkg-config'

          [host_machine]
          system = 'windows'
          cpu_family = 'aarch64'
          cpu = 'aarch64'
          endian = 'little'
          EOF

      - name: Configure (Meson)
        run: |
          meson setup --cross-file arm64ec.meson --buildtype release --prefix "$PWD/install" build.w64

      - name: Build
        run: meson compile -C build.w64

      - name: Install into staging dir
        run: meson install -C build.w64

      - name: Upload DLL artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dxvk-sarek-arm64ec-dlls
          path: |
            install/bin/*.dll
            install/bin/*.pdb
          if-no-files-found: error
