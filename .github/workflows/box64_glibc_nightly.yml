name: Build Box64 Glibc Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "0 18 * * 0"   # weekly (UTC, every Sunday)

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  resolve-latest:
    name: Resolve upstream HEAD (commit)
    runs-on: ubuntu-latest
    outputs:
      sha:   ${{ steps.upstream.outputs.sha }}
      short: ${{ steps.upstream.outputs.short }}
      datecode: ${{ steps.datecode.outputs.code }}
    steps:
      - name: Install tools (jq, curl)
        run: |
          set -Eeuo pipefail
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Resolve upstream Box64 HEAD SHA (robust)
        id: upstream
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -Eeuo pipefail
          API="https://api.github.com"
          OWNER="ptitSeb"
          REPO="box64"
          auth=(-H "Authorization: Bearer ${GH_TOKEN}")
          ua=(-H "User-Agent: ${GITHUB_REPOSITORY:-box64-nightly-workflow}")
          ver=(-H "X-GitHub-Api-Version: 2022-11-28" -H "Accept: application/vnd.github+json")
          fetch() { curl -fsSL --retry 6 --retry-delay 2 --retry-all-errors "${auth[@]}" "${ua[@]}" "${ver[@]}" "$1"; }

          default_branch="$(fetch "$API/repos/$OWNER/$REPO" | jq -r .default_branch)"
          [[ -z "$default_branch" || "$default_branch" == "null" ]] && default_branch="main"

          sha="$(fetch "$API/repos/$OWNER/$REPO/commits/${default_branch}" | jq -r .sha)"
          [[ -z "$sha" || "$sha" == "null" ]] && { echo "::error::Failed to resolve upstream HEAD SHA"; exit 1; }

          short="$(printf '%s' "$sha" | cut -c1-7)"
          echo "sha=${sha}"     >> "$GITHUB_OUTPUT"
          echo "short=${short}" >> "$GITHUB_OUTPUT"
          echo "Upstream ${default_branch} @ ${short}"

      - name: Decide date code (YYMMDD, KST)
        id: datecode
        run: echo "code=$(TZ=Asia/Seoul date +%y%m%d)" >> "$GITHUB_OUTPUT"

  compile-box64:
    name: Build & append ${{ needs.resolve-latest.outputs.short }}
    needs: [resolve-latest]
    runs-on: ubuntu-24.04-arm

    steps:
      # --- 초경량 가드: 커밋 동일 시 즉시 종료 (설치 전에) ---
      - name: Skip if same upstream commit already released
        id: guard_commit
        env:
          GH_TOKEN: ${{ github.token }}
          REPO:     ${{ github.repository }}
          SHA:      ${{ needs.resolve-latest.outputs.sha }}
        run: |
          set -Eeuo pipefail
          BODY="$(gh release view BOX64-NIGHTLY --repo "$REPO" --json body --jq '.body' 2>/dev/null || true)"
          if echo "$BODY" | grep -q "commit/${SHA}"; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "Same upstream commit already released; skipping."
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      # 동일 날짜 자산 중복 방지(보호막)
      - name: Skip if same-date asset exists
        id: dupe
        if: steps.guard_commit.outputs.skip != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
          DATECODE: ${{ needs.resolve-latest.outputs.datecode }}
        run: |
          set -Eeuo pipefail
          API="https://api.github.com"
          auth=(-H "Authorization: Bearer ${GH_TOKEN}")
          ver=(-H "Accept: application/vnd.github+json")
          FILENAME="box64-nightly-${DATECODE}.wcp"
          HTTP="$(curl -s -o /tmp/nightly.json -w '%{http_code}' "${auth[@]}" "${ver[@]}" \
                  "$API/repos/${REPO}/releases/tags/BOX64-NIGHTLY" || true)"
          if [ "$HTTP" = "200" ] && jq -e --arg N "$FILENAME" '.assets[]?.name == $N' /tmp/nightly.json >/dev/null; then
            echo "skip=true"  >> "$GITHUB_OUTPUT"
            echo "Found asset ${FILENAME}; skipping build."
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install build tools
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        run: |
          set -Eeuo pipefail
          sudo apt-get update
          sudo apt-get install -y jq zstd wget curl git cmake ninja-build build-essential gh

      - name: Checkout upstream Box64 (exact commit)
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        uses: actions/checkout@v4
        with:
          repository: ptitSeb/box64
          ref: ${{ needs.resolve-latest.outputs.sha }}
          submodules: recursive
          path: src
          fetch-depth: 1

      - name: Compile Box64 (glibc)
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        run: |
          set -Eeuo pipefail
          cd src
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build build -j"$(nproc)"
          cd ..

      - name: Package WCP (lowercase filename)
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        env:
          DATECODE: ${{ needs.resolve-latest.outputs.datecode }}
        run: |
          set -Eeuo pipefail
          VER="${DATECODE}"
          DESC="Version ${VER} Box64 build by Ari"

          mkdir -p Box64_WCP artifacts
          cp src/build/box64 Box64_WCP/box64
          chmod +x Box64_WCP/box64 || true

          cat > Box64_WCP/profile.json <<JSON
          {
            "type": "Box64",
            "versionName": "nightly",
            "versionCode": ${VER},
            "description": "${DESC}",
            "files": [
              {
                "source": "box64",
                "target": "\${localbin}/box64"
              }
            ]
          }
          JSON

          (cd Box64_WCP && tar --zstd -cf "../artifacts/box64-nightly-${VER}.wcp" profile.json box64)

      - name: Upload packaged artifact
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: box64-nightly-${{ needs.resolve-latest.outputs.datecode }}
          path: ./artifacts/box64-nightly-${{ needs.resolve-latest.outputs.datecode }}.wcp
          if-no-files-found: error
          retention-days: 7

      - name: Ensure/Update release (tag = BOX64-NIGHTLY) and upload asset
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
          REPO:     ${{ github.repository }}
          SHORT:    ${{ needs.resolve-latest.outputs.short }}
          SHA:      ${{ needs.resolve-latest.outputs.sha }}
          DATECODE: ${{ needs.resolve-latest.outputs.datecode }}
        run: |
          set -Eeuo pipefail
          BODY=$'🌙 Automated BOX64-NIGHTLY builds (rolling)\n\nCommit: ['"${SHORT}"'](https://github.com/ptitSeb/box64/commit/'"${SHA}"')'

          if ! gh release view "BOX64-NIGHTLY" --repo "$REPO" >/dev/null 2>&1; then
            gh release create "BOX64-NIGHTLY" --repo "$REPO" -t "BOX64-NIGHTLY" -n "${BODY}"
          else
            gh release edit   "BOX64-NIGHTLY" --repo "$REPO" -t "BOX64-NIGHTLY" -n "${BODY}"
          fi

          gh release upload "BOX64-NIGHTLY" \
            "./artifacts/box64-nightly-${DATECODE}.wcp" \
            --repo "$REPO" --clobber

      - name: Trim old assets (keep latest 5)
        if: steps.guard_commit.outputs.skip != 'true' && steps.dupe.outputs.skip != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          set -Eeuo pipefail
          API="https://api.github.com/repos/${REPO}/releases/tags/BOX64-NIGHTLY"
          assets="$(curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$API" | jq -c '.assets | sort_by(.created_at)')"
          count="$(echo "$assets" | jq 'length')"
          if [ "$count" -gt 5 ]; then
            delcount=$((count-5))
            echo "::notice::Found $count assets, will delete $delcount oldest."
            echo "$assets" | jq -r ".[0:$delcount][] | .id" | while read -r id; do
              curl -s -X DELETE -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
                   "https://api.github.com/repos/${REPO}/releases/assets/${id}"
              echo "Deleted asset id=$id"
            done
          else
            echo "::notice::Asset count $count (<=5); nothing to delete."
          fi
